"""Drop unneeded columns

Revision ID: 58fcd14830ae
Revises: 9d70bac89aa5
Create Date: 2023-08-13 16:18:48.445009

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "58fcd14830ae"
down_revision = "94f1cd79b7d4"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("download_urls")
    op.drop_column("scans", "fail_reason")
    op.drop_column("scans", "pending_by")
    op.drop_column("scans", "commit_hash")
    op.drop_column("scans", "queued_by")
    op.drop_column("scans", "queued_at")
    op.drop_column("scans", "finished_by")
    op.drop_column("scans", "status")
    op.drop_column("scans", "pending_at")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("scans", sa.Column("pending_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column(
        "scans",
        sa.Column(
            "status",
            postgresql.ENUM("QUEUED", "PENDING", "FINISHED", "FAILED", name="status"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column("scans", sa.Column("finished_by", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column("scans", sa.Column("queued_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column("scans", sa.Column("queued_by", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column("scans", sa.Column("commit_hash", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column("scans", sa.Column("pending_by", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column("scans", sa.Column("fail_reason", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index(None, "scans", ["finished_at"])
    op.create_table(
        "download_urls",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("scan_id", sa.UUID(), autoincrement=False, nullable=False, index=True),
        sa.Column("url", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["scan_id"], ["scans.scan_id"], name="download_urls_scan_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="download_urls_pkey"),
    )
    # ### end Alembic commands ###
