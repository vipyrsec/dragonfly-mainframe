---
name: Migration as SQL

on:
  pull_request:
    paths:
      - alembic/versions/**

permissions:
  # To post the migration SQL as a PR comment
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
  comment:
    permissions:
      pull-requests: write

    runs-on: ubuntu-24.04
    steps:
      - name: Checkout (base)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          ref: ${{ github.event.pull_request.base.sha }}

      - name: Setup uv
        uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b  # v6.6.0
        with:
          enable-cache: true

      - name: Install Python
        run: uv python install

      - name: Install dependencies
        run: uv sync --no-default-groups

      - name: Get the base migration revision
        run: |
          #!/usr/bin/env bash
          set -euo pipefail

          base_head="$(uv run alembic heads | awk '{printf $1}')"
          if [ "$(echo base_head | wc -l)" -gt 1 ]; then
            echo >&2 'Multiple heads are not supported'
            exit 1
          fi

          echo "Base migration revision: ${base_head}"
          echo "BASE_MIGRATION_REVISION=${base_head}" >>"${GITHUB_ENV}"

      - name: Checkout (HEAD)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          clean: false
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Generate SQL
        id: sql
        run: |
          #!/usr/bin/env bash
          set -euo pipefail

          base="${BASE_MIGRATION_REVISION}"
          EOF="$(dd if=/dev/urandom bs=15 count=1 status=none | base64)"

          # `alembic upgrade --sql` outputs the SQL to stdout, and the logs to stderr
          uv run alembic upgrade --sql "${base}:head" >up.sql 2>up.log

          echo "UP_MIGRATION_SQL<<${EOF}" >"${GITHUB_OUTPUT}"
          cat up.sql >>"${GITHUB_OUTPUT}"
          echo "${EOF}" >>"${GITHUB_OUTPUT}"

          echo "UP_MIGRATION_LOGS<<${EOF}" >>"${GITHUB_OUTPUT}"
          cat up.log >>"${GITHUB_OUTPUT}"
          echo "${EOF}" >>"${GITHUB_OUTPUT}"

          # `alembic downgrade --sql` outputs the SQL to stdout, and the logs to stderr
          uv run alembic downgrade --sql "head:${base}" >down.sql 2>down.log

          echo "DOWN_MIGRATION_SQL<<${EOF}" >>"${GITHUB_OUTPUT}"
          cat down.sql >>"${GITHUB_OUTPUT}"
          echo "${EOF}" >>"${GITHUB_OUTPUT}"

          echo "DOWN_MIGRATION_LOGS<<${EOF}" >>"${GITHUB_OUTPUT}"
          cat down.log >>"${GITHUB_OUTPUT}"
          echo "${EOF}" >>"${GITHUB_OUTPUT}"

      - name: Comment on PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea  # 7.0.1
        with:
          script: |-
            "use strict";

            const comment = `
            ### \`alembic upgrade --sql $base:head\`
            \`\`\`
            ${{ steps.sql.outputs.UP_MIGRATION_LOGS }}
            \`\`\`
            \`\`\`sql
            ${{ steps.sql.outputs.UP_MIGRATION_SQL }}
            \`\`\`

            ### \`alembic downgrade --sql head:$base\`
            \`\`\`
            ${{ steps.sql.outputs.DOWN_MIGRATION_LOGS }}
            \`\`\`
            \`\`\`sql
            ${{ steps.sql.outputs.DOWN_MIGRATION_SQL }}
            \`\`\`
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment,
            });
